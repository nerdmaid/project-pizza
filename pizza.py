import click
import random


class Pizza:
    def __init__(self, name, ingredients, size='L'):
        self.name = name
        self.size = size
        self.ingredients = ingredients

    def menu_position(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –ø–∏—Ü—Ü–∞ –±—É–¥–µ—Ç
             –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –º–µ–Ω—é"""
        menu_position = ', '.join(self.ingredients.get('ingredients'))
        return f'-{self.name}: {menu_position}'

    @property
    def size(self):
        return self.__size

    @size.setter
    def size(self, value):
        if value not in ['L', 'XL']:
            raise ValueError('–£ –Ω–∞—Å —Ç–æ–ª—å–∫–æ –±–æ–ª—å—à–∏–µ —Ä–∞–∑–º–µ—Ä—ã')
        self.__size = value

    def dict(self):
        """–í—ã–≤–æ–¥–∏—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è"""
        print(f"{self.name}:{self.ingredients}")

    def __eq__(self, other):
        if isinstance(other, Pizza):
            if self.name == other.name and self.size == other.size:
                return True
        return False

    def __str__(self):
        return f'{self.name}, —Ä–∞–∑–º–µ—Ä {self.size}'


class Margherita(Pizza):
    def __init__(self, size='L'):
        self.size = size
        self.name = 'Margherita üßÄ'
        self.ingredients = {'ingredients': ['tomato sauce', 'mozzarella', 'tomatoes']}


class Pepperoni(Pizza):
    def __init__(self, size='L'):
        self.size = size
        self.name = 'Pepperoni üçï'
        self.ingredients = {'ingredients': ['tomato sauce', 'mozzarella', 'pepperoni']}


class Hawaiian(Pizza):
    def __init__(self, size='L'):
        self.size = size
        self.name = 'Hawaiian üçç'
        self.ingredients = {'ingredients': ['tomato sauce', 'mozzarella', 'chicken', 'pineapples']}


@click.group()
def cli():
    pass


def log(text):
    """–í—ã–≤–æ–¥–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
    def decorator(function):
        def wrapper(*args, **kwargs):
            function(*args, **kwargs)
            time = random.randint(1, 200)
            print(text.format(str(time)))

        return wrapper

    return decorator


@log('üë®üèª‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {} —Å!')
def bake(pizza: Pizza):
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log('üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {} —Å!')
def deliver(pizza: Pizza):
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""


@log('üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!!')
def pickup(pizza: Pizza):
    """–ó–∞–±–∏—Ä–∞–µ—Ç –ø–∏—Ü—Ü—É"""


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
@click.argument('size', default='L')
def order(pizza, size, delivery: bool):
    """–ó–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É (–µ–µ –ø—Ä–∏–≥–æ—Ç–æ–≤—è—Ç –∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –¥–æ—Å—Ç–∞–≤—è—Ç)"""
    if pizza == 'margherita':
        order_pizza = Margherita(size)
    elif pizza == 'pepperoni':
        order_pizza = Pepperoni(size)
    elif pizza == 'hawaiian':
        order_pizza = Hawaiian(size)
    else:
        click.echo('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑: margherita, pepperoni, hawaiian')
        return
    click.echo(f'–í–∞—à –∑–∞–∫–∞–∑: {(order_pizza)}')
    bake(order_pizza)

    if delivery:
        deliver(order_pizza)
    else:
        pickup(order_pizza)

    click.echo('–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!')


@cli.command()
def menu():
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é"""
    click.echo(Margherita().menu_position())
    click.echo(Pepperoni().menu_position())
    click.echo(Hawaiian().menu_position())


if __name__ == '__main__':
    cli()
